"""Add report locking and collaboration features

Revision ID: 20251009_add_report_locking_and_collaboration
Revises: 96687e9fd0aa
Create Date: 2025-10-09 14:41:00.000000

Add tables for reports, report locks, comments, and revisions
Update workflow model for reports relationship

"""

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "20251009_add_report_locking_and_collaboration"
down_revision = "96687e9fd0aa"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Use String(36) for UUID to be compatible with SQLite
    # Use Text for JSON fields to be compatible with SQLite
    op.create_table(
        "reports",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("report_type", sa.String(length=50), nullable=False),
        sa.Column(
            "status", sa.String(length=50), nullable=False, server_default="draft"
        ),
        sa.Column(
            "version", sa.String(length=20), nullable=False, server_default="1.0"
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("(datetime('now'))"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("(datetime('now'))"),
            nullable=True,
        ),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.Column("workflow_id", sa.String(length=36), nullable=True),
        sa.Column("created_by", sa.String(length=36), nullable=False),
        sa.Column("updated_by", sa.String(length=36), nullable=True),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column("report_metadata", sa.Text(), server_default="{}", nullable=True),
        sa.Column("pdf_path", sa.String(length=500), nullable=True),
        sa.Column("excel_path", sa.String(length=500), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["workflow_id"],
            ["workflows.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_table(
        "report_locks",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("report_id", sa.String(length=36), nullable=False),
        sa.Column("locked_by", sa.String(length=36), nullable=False),
        sa.Column(
            "locked_at",
            sa.DateTime(),
            server_default=sa.text("(datetime('now'))"),
            nullable=True,
        ),
        sa.Column("lock_reason", sa.String(length=255), nullable=False),
        sa.Column("expires_at", sa.DateTime(), nullable=True),
        sa.Column(
            "is_active", sa.Boolean(), server_default=sa.text("true"), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["locked_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["report_id"],
            ["reports.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.Index("ix_report_locks_report_id", "report_id"),
    )
    op.create_table(
        "comments",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("report_id", sa.String(length=36), nullable=False),
        sa.Column("user_id", sa.String(length=36), nullable=False),
        sa.Column("parent_id", sa.String(length=36), nullable=True),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column(
            "comment_type",
            sa.String(length=50),
            server_default="general",
            nullable=True,
        ),
        sa.Column(
            "is_resolved", sa.Boolean(), server_default=sa.text("false"), nullable=True
        ),
        sa.Column("resolved_by", sa.String(length=36), nullable=True),
        sa.Column("resolved_at", sa.DateTime(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("(datetime('now'))"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("(datetime('now'))"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["comments.id"],
        ),
        sa.ForeignKeyConstraint(
            ["report_id"],
            ["reports.id"],
        ),
        sa.ForeignKeyConstraint(
            ["resolved_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.Index("ix_comments_report_id", "report_id"),
        sa.Index("ix_comments_user_id", "user_id"),
    )
    op.create_table(
        "revisions",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("report_id", sa.String(length=36), nullable=False),
        sa.Column("version", sa.String(length=20), nullable=False),
        sa.Column("revision_number", sa.Integer(), nullable=False),
        sa.Column("changed_by", sa.String(length=36), nullable=False),
        sa.Column("change_type", sa.String(length=50), nullable=False),
        sa.Column("changes_summary", sa.Text(), nullable=True),
        sa.Column("previous_version", sa.String(length=20), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("(datetime('now'))"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["changed_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["report_id"],
            ["reports.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.Index("ix_revisions_report_id", "report_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("revisions")
    op.drop_table("comments")
    op.drop_table("report_locks")
    op.drop_table("reports")
    # ### end Alembic commands ###
